{
  "info": {
      "version": "3.1.0",
      "description": "Move programming from the user to the machine.",
      "title": "Nutanix Intentful API"
  },
  "host": "35.196.200.179:9440",
  "schemes": [
      "https"
  ],
  "paths": {
      "/subnets": {
          "post": {
              "responses": {
                  "default": {
                      "description": "Internal Error",
                      "schema": {
                          "$ref": "#/definitions/subnet_status"
                      }
                  },
                  "202": {
                      "description": "Request Accepted",
                      "schema": {
                          "$ref": "#/definitions/subnet_intent_response"
                      }
                  }
              },
              "description": "This operation submits a request to create a subnet based on the input parameters.\nA subnet is a block of IP addresses.\n",
              "parameters": [
                  {
                      "required": true,
                      "in": "body",
                      "name": "body",
                      "schema": {
                          "$ref": "#/definitions/subnet_intent_input"
                      }
                  }
              ],
              "tags": [
                  "subnets"
              ],
              "x-ntnx-operations": [
                  "create"
              ],
              "x-ntnx-kind": "subnet",
              "summary": "Create a subnet"
          }
      },
      "/subnets/list": {
          "post": {
              "responses": {
                  "200": {
                      "description": "Success",
                      "schema": {
                          "$ref": "#/definitions/subnet_list_intent_response"
                      }
                  },
                  "default": {
                      "description": "Internal Error",
                      "schema": {
                          "$ref": "#/definitions/subnet_status"
                      }
                  }
              },
              "description": "This operation gets a list of subnets, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n",
              "parameters": [
                  {
                      "required": true,
                      "in": "body",
                      "name": "get_entities_request",
                      "schema": {
                          "$ref": "#/definitions/subnet_list_metadata"
                      }
                  }
              ],
              "tags": [
                  "subnets"
              ],
              "x-ntnx-operations": [
                  "view"
              ],
              "x-ntnx-kind": "subnet",
              "summary": "Get a list of subnets"
          }
      },
      "/subnets/{uuid}": {
          "put": {
              "responses": {
                  "default": {
                      "description": "Internal Error",
                      "schema": {
                          "$ref": "#/definitions/subnet_status"
                      }
                  },
                  "202": {
                      "description": "Request Accepted",
                      "schema": {
                          "$ref": "#/definitions/subnet_intent_response"
                      }
                  },
                  "404": {
                      "description": "Invalid UUID provided",
                      "schema": {
                          "$ref": "#/definitions/subnet_status"
                      }
                  }
              },
              "description": "This operation submits a request to update a subnet based on the input parameters.\n",
              "parameters": [
                  {
                      "$ref": "#/parameters/uuid"
                  },
                  {
                      "required": true,
                      "in": "body",
                      "name": "body",
                      "schema": {
                          "$ref": "#/definitions/subnet_intent_input"
                      }
                  }
              ],
              "tags": [
                  "subnets"
              ],
              "x-ntnx-operations": [
                  "update"
              ],
              "x-ntnx-kind": "subnet",
              "summary": "Update a subnet"
          },
          "get": {
              "responses": {
                  "200": {
                      "description": "Success",
                      "schema": {
                          "$ref": "#/definitions/subnet_intent_response"
                      }
                  },
                  "default": {
                      "description": "Internal Error",
                      "schema": {
                          "$ref": "#/definitions/subnet_status"
                      }
                  },
                  "404": {
                      "description": "Invalid UUID provided",
                      "schema": {
                          "$ref": "#/definitions/subnet_status"
                      }
                  }
              },
              "description": "This operation gets a subnet.",
              "parameters": [
                  {
                      "$ref": "#/parameters/uuid"
                  }
              ],
              "tags": [
                  "subnets"
              ],
              "x-ntnx-operations": [
                  "view"
              ],
              "x-ntnx-kind": "subnet",
              "summary": "Get a subnet"
          },
          "delete": {
              "responses": {
                  "default": {
                      "description": "Internal Error",
                      "schema": {
                          "$ref": "#/definitions/subnet_status"
                      }
                  },
                  "202": {
                      "description": "Request Accepted",
                      "schema": {
                          "$ref": "#/definitions/subnet_intent_response"
                      }
                  },
                  "404": {
                      "description": "Invalid UUID provided",
                      "schema": {
                          "$ref": "#/definitions/subnet_status"
                      }
                  }
              },
              "description": "This operation submits a request to delete a subnet.",
              "parameters": [
                  {
                      "$ref": "#/parameters/uuid"
                  }
              ],
              "tags": [
                  "subnets"
              ],
              "x-ntnx-operations": [
                  "delete"
              ],
              "x-ntnx-kind": "subnet",
              "summary": "Delete a subnet"
          }
      }
  },
  "parameters": {
      "uuid": {
          "in": "path",
          "description": "The UUID of the entity.",
          "format": "UUID",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "required": true,
          "type": "string",
          "name": "uuid"
      }
  },
  "produces": [
      "application/json"
  ],
  "basePath": "/api/nutanix/v3",
  "securityDefinitions": {
      "basicAuth": {
          "type": "basic"
      }
  },
  "definitions" : {
      "subnet_intent_response": {
          "title": "subnet Intent Response",
          "required": [
            "api_version",
            "metadata"
          ],
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/definitions/subnet_def_status"
            },
            "spec": {
              "$ref": "#/definitions/subnet"
            },
            "api_version": {
              "type": "string"
            },
            "metadata": {
              "$ref": "#/definitions/subnet_metadata"
            }
          },
          "description": "Response object for intentful operations on a subnet"
        },
        "subnet_status": {
          "title": "Response Kind",
          "type": "object",
          "properties": {
            "kind": {
              "default": "subnet",
              "readOnly": false,
              "type": "string",
              "description": "The kind name",
              "x-ntnx-enum": [
                "subnet"
              ]
            },
            "code": {
              "readOnly": false,
              "type": "integer",
              "description": "The HTTP error code."
            },
            "message_list": {
              "items": {
                "$ref": "#/definitions/message_resource"
              },
              "readOnly": false,
              "type": "array"
            },
            "state": {
              "readOnly": false,
              "type": "string"
            },
            "api_version": {
              "readOnly": false,
              "type": "string"
            }
          },
          "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n"
        },
        "subnet_intent_input": {
          "title": "subnet Intent Entity",
          "required": [
            "metadata",
            "spec"
          ],
          "type": "object",
          "properties": {
            "spec": {
              "$ref": "#/definitions/subnet"
            },
            "api_version": {
              "default": "3.1.0",
              "type": "string"
            },
            "metadata": {
              "$ref": "#/definitions/subnet_metadata"
            }
          },
          "description": "An intentful representation of a subnet"
        },
        "subnet_list_intent_response": {
          "title": "Entity Intent List Response",
          "required": [
            "api_version",
            "metadata"
          ],
          "type": "object",
          "properties": {
            "entities": {
              "items": {
                "$ref": "#/definitions/subnet_intent_resource"
              },
              "type": "array"
            },
            "api_version": {
              "type": "string"
            },
            "metadata": {
              "$ref": "#/definitions/subnet_list_metadata_output"
            }
          },
          "description": "Response object for intentful operation of subnets"
        },
        "subnet_list_metadata": {
          "title": "Metadata for subnet list",
          "type": "object",
          "properties": {
            "filter": {
              "type": "string",
              "description": "The filter in FIQL syntax used for the results."
            },
            "kind": {
              "default": "subnet",
              "x-ntnx-enum": [
                "subnet"
              ],
              "type": "string",
              "description": "The kind name"
            },
            "sort_order": {
              "$ref": "#/definitions/sort_order"
            },
            "offset": {
              "minimum": 0,
              "type": "integer",
              "description": "Offset from the start of the entity list",
              "format": "int32"
            },
            "length": {
              "minimum": 1,
              "type": "integer",
              "description": "The number of records to retrieve relative to the offset",
              "format": "int32"
            },
            "sort_attribute": {
              "type": "string",
              "description": "The attribute to perform sort on"
            }
          },
          "description": "All api calls that return a list will have this metadata block as input\n"
        },
        "subnet_def_status": {
          "title": "subnet Intent Status with placement specified",
          "required": [
            "name",
            "resources"
          ],
          "type": "object",
          "properties": {
            "state": {
              "type": "string",
              "description": "The state of the subnet."
            },
            "name": {
              "type": "string",
              "description": "subnet Name."
            },
            "availability_zone_reference": {
              "$ref": "#/definitions/availability_zone_reference"
            },
            "message_list": {
              "items": {
                "$ref": "#/definitions/message_resource"
              },
              "type": "array",
              "description": "Any error messages for the subnet, if in an error state."
            },
            "cluster_reference": {
              "$ref": "#/definitions/cluster_reference"
            },
            "resources": {
              "$ref": "#/definitions/subnet_resources_def_status"
            },
            "description": {
              "type": "string",
              "description": "A description for subnet."
            }
          },
          "description": "An intentful representation of a subnet status"
        },
        "subnet": {
          "title": "subnet Intent Spec with placement specified",
          "required": [
            "name",
            "resources"
          ],
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "A description for subnet.",
              "maxLength": 1000
            },
            "resources": {
              "$ref": "#/definitions/subnet_resources"
            },
            "cluster_reference": {
              "$ref": "#/definitions/cluster_reference"
            },
            "name": {
              "type": "string",
              "description": "subnet Name.",
              "maxLength": 64
            },
            "availability_zone_reference": {
              "$ref": "#/definitions/availability_zone_reference"
            }
          },
          "description": "An intentful representation of a subnet spec"
        },
        "subnet_metadata": {
          "title": "subnet metadata",
          "required": [
            "kind"
          ],
          "type": "object",
          "properties": {
            "last_update_time": {
              "readOnly": false,
              "type": "string",
              "description": "UTC date and time in RFC-3339 format when subnet was last updated\n",
              "format": "date-time"
            },
            "kind": {
              "default": "subnet",
              "readOnly": false,
              "type": "string",
              "description": "The kind name",
              "x-ntnx-enum": [
                "subnet"
              ]
            },
            "uuid": {
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "type": "string",
              "description": "subnet uuid",
              "format": "UUID"
            },
            "project_reference": {
              "description": "The project the subnet is in.",
              "$ref": "#/definitions/project_reference"
            },
            "spec_version": {
              "type": "integer",
              "description": "Version number of the latest spec."
            },
            "creation_time": {
              "readOnly": false,
              "type": "string",
              "description": "UTC date and time in RFC-3339 format when subnet was created\n",
              "format": "date-time"
            },
            "spec_hash": {
              "type": "string",
              "description": "Hash of the spec. This will be returned from server.\n"
            },
            "owner_reference": {
              "$ref": "#/definitions/user_reference"
            },
            "categories": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object",
              "description": "Categories for the subnet"
            },
            "name": {
              "readOnly": false,
              "type": "string",
              "description": "subnet name",
              "maxLength": 64
            }
          },
          "description": "The subnet kind metadata"
        },
        "message_resource": {
          "title": "Message.",
          "required": [
            "message",
            "reason"
          ],
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "If state is ERROR, a message describing the error."
            },
            "reason": {
              "x-ntnx-enum": [
                "ACCESS_DENIED",
                "ACCESS_FORBIDDEN",
                "ACTION_NOT_SUPPORTED",
                "AUTHENTICATION_REQUIRED",
                "BEARER_TOKEN_EXPIRED",
                "BEARER_TOKEN_BAD_SIGNATURE",
                "CANNOT_MODIFY_PRE_CONFIGURED_REPORT",
                "CATEGORY_NAME_VALUE_MISMATCH",
                "CONFIGURATION_INCOMPLETE",
                "CONCURRENT_REQUESTS_NOT_ALLOWED",
                "DEFAULT_PROJECT_UNAVAILABLE",
                "DESERIALIZATION_FAILED",
                "DIRECTORY_SERVICE_CONNECTION_FAILED",
                "ENTITY_ALREADY_EXISTS",
                "ENTITY_DELETION_FAILED",
                "ENTITY_IS_READONLY",
                "ENTITY_NAME_UUID_MISMATCH",
                "ENTITY_NOT_CONFIGURED",
                "ENTITY_NOT_FOUND",
                "ENTITY_SAVE_ERROR",
                "ENTITY_UPDATE_FAILED",
                "IDEMPOTENCE_UUID_CREATION_FAILED",
                "IDP_NOT_REACHABLE",
                "INTERNAL_ERROR",
                "INVALID_ARGUMENT",
                "INVALID_AZ_NAME",
                "INVALID_CONTENT_TYPE",
                "INVALID_DATA_FORMAT",
                "INVALID_PORTAL_CONFIGURATION",
                "INVALID_REQUEST",
                "INVALID_UUID",
                "INVALID_OWNER_REFERENCE",
                "INTERNAL_AZ_PROXY_SETUP_ERROR",
                "INTERNAL_ERROR_REMOTE_REQUEST",
                "INTERNAL_ROLE_ACCESS_DENIED",
                "INCORRECT_EVENTS_FILTER",
                "MISSING_ATTRIBUTE",
                "MISSING_CURRENT_USER_METADATA",
                "NAME_NOT_IN_DOMAIN",
                "NO_RESPONSE_RECEIVED_FROM_PORTAL",
                "PE_NOT_PAIRED_WITH_PC",
                "PC_NOT_PAIRED_WITH_XI_PORTAL",
                "REFERENCE_ERROR",
                "RESERVED_ROLE_ACCESS_DENIED",
                "REQUEST_NOT_SUPPORTED",
                "REMOTE_CLUSTER_IP_FETCH_FAILED",
                "REMOTE_CLUSTER_NOT_CONNECTED",
                "REMOTE_CONNECTION_EXISTS",
                "REMOTE_CONNECTION_NOT_FOUND",
                "REPORT_CONFIG_NOT_FOUND",
                "REPORTING_RESOURCE_NOT_FOUND",
                "REPORTING_INTERNAL_ERROR",
                "SERVICE_UNAVAILABLE",
                "SEARCH_RESULT_PROCESSING_ERROR",
                "TOO_MANY_REQUESTS",
                "UNCONFIGURED_API_KEY",
                "UNCONFIGURED_PORTAL_CONNECTION",
                "UNSPECIFIED_EVENTS_FILTER",
                "UNSUPPORTED_AZ_PROXY_API",
                "UNSUPPORTED_MEDIA_TYPE_ERROR",
                "UNSUPPORTED_API_VERSION",
                "UPLOAD_TO_S3_FAILED",
                "VALIDATION_ERROR",
                "INVALID_SSL_CERTIFICATE",
                "ERROR_ATTACHING_FILE_TO_CASE",
                "SPEC_UPDATE_ERROR",
                "SPEC_INCOMPATIBLE_ERROR"
              ],
              "type": "string",
              "description": "If state is ERROR, a machine-readable snake-cased string."
            },
            "details": {
              "additionalProperties": {
                "type": "string"
              },
              "readOnly": false,
              "type": "object",
              "description": "Custom key-value details relevant to the status."
            }
          },
          "description": "message."
        },
        "subnet_intent_resource": {
          "title": "subnet Intent Response",
          "required": [
            "metadata"
          ],
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/definitions/subnet_def_status"
            },
            "spec": {
              "$ref": "#/definitions/subnet"
            },
            "api_version": {
              "type": "string"
            },
            "metadata": {
              "$ref": "#/definitions/subnet_metadata"
            }
          },
          "description": "Response object for intentful operations on a subnet"
        },
        "subnet_list_metadata_output": {
          "title": "Metadata for subnet list output",
          "type": "object",
          "properties": {
            "filter": {
              "type": "string",
              "description": "The filter used for the results"
            },
            "kind": {
              "default": "subnet",
              "x-ntnx-enum": [
                "subnet"
              ],
              "type": "string",
              "description": "The kind name"
            },
            "sort_order": {
              "$ref": "#/definitions/sort_order"
            },
            "offset": {
              "type": "integer",
              "description": "Offset from the start of the entity list"
            },
            "total_matches": {
              "type": "integer",
              "description": "Total matches found"
            },
            "length": {
              "type": "integer",
              "description": "The number of records retrieved relative to the offset"
            },
            "sort_attribute": {
              "type": "string",
              "description": "The attribute to perform sort on"
            }
          },
          "description": "All api calls that return a list will have this metadata block\n"
        },
        "sort_order": {
          "x-ntnx-enum": [
            "ASCENDING",
            "DESCENDING"
          ],
          "type": "string",
          "description": "The sort order in which results are returned",
          "title": "Sort order"
        },
        "availability_zone_reference": {
          "title": "Reference to a availability_zone",
          "required": [
            "kind",
            "uuid"
          ],
          "type": "object",
          "properties": {
            "kind": {
              "default": "availability_zone",
              "readOnly": false,
              "type": "string",
              "description": "The kind name",
              "x-ntnx-enum": [
                "availability_zone"
              ]
            },
            "name": {
              "readOnly": false,
              "type": "string"
            },
            "uuid": {
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "type": "string",
              "format": "UUID"
            }
          },
          "description": "The reference to a availability_zone"
        },
        "cluster_reference": {
          "title": "Reference to a cluster",
          "required": [
            "kind",
            "uuid"
          ],
          "type": "object",
          "properties": {
            "kind": {
              "default": "cluster",
              "readOnly": false,
              "type": "string",
              "description": "The kind name",
              "x-ntnx-enum": [
                "cluster"
              ]
            },
            "name": {
              "readOnly": false,
              "type": "string"
            },
            "uuid": {
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "type": "string",
              "format": "UUID"
            }
          },
          "description": "The reference to a cluster"
        },
        "subnet_resources_def_status": {
          "title": "Subnet creation/modification status",
          "type": "object",
          "properties": {
            "vswitch_name": {
              "type": "string"
            },
            "subnet_type": {
              "x-ntnx-enum": [
                "VLAN"
              ],
              "type": "string"
            },
            "ip_config": {
              "$ref": "#/definitions/ip_config"
            },
            "vlan_id": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            },
            "network_function_chain_reference": {
              "$ref": "#/definitions/network_function_chain_reference"
            }
          },
          "description": "Subnet creation/modification status."
        },
        "subnet_resources": {
          "title": "Subnet creation/modification spec",
          "required": [
            "subnet_type"
          ],
          "type": "object",
          "properties": {
            "vswitch_name": {
              "type": "string",
              "maxLength": 64
            },
            "subnet_type": {
              "x-ntnx-enum": [
                "VLAN"
              ],
              "type": "string"
            },
            "ip_config": {
              "$ref": "#/definitions/ip_config"
            },
            "vlan_id": {
              "type": "integer",
              "format": "int32"
            },
            "network_function_chain_reference": {
              "$ref": "#/definitions/network_function_chain_reference"
            }
          },
          "description": "Subnet creation/modification spec."
        },
        "project_reference": {
          "title": "Reference to a project",
          "required": [
            "kind",
            "uuid"
          ],
          "type": "object",
          "properties": {
            "kind": {
              "default": "project",
              "readOnly": false,
              "type": "string",
              "description": "The kind name",
              "x-ntnx-enum": [
                "project"
              ]
            },
            "name": {
              "readOnly": false,
              "type": "string"
            },
            "uuid": {
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "type": "string",
              "format": "UUID"
            }
          },
          "description": "The reference to a project"
        },
        "user_reference": {
          "title": "Reference to a user",
          "required": [
            "kind",
            "uuid"
          ],
          "type": "object",
          "properties": {
            "kind": {
              "default": "user",
              "readOnly": false,
              "type": "string",
              "description": "The kind name",
              "x-ntnx-enum": [
                "user"
              ]
            },
            "name": {
              "readOnly": false,
              "type": "string"
            },
            "uuid": {
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "type": "string",
              "format": "UUID"
            }
          },
          "description": "The reference to a user"
        },
        "ip_config": {
          "title": "IP config",
          "type": "object",
          "properties": {
            "pool_list": {
              "items": {
                "$ref": "#/definitions/ip_pool"
              },
              "type": "array"
            },
            "default_gateway_ip": {
              "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
              "type": "string",
              "description": "Default gateway IP address."
            },
            "prefix_length": {
              "type": "integer",
              "format": "int32"
            },
            "subnet_ip": {
              "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
              "type": "string",
              "description": "Subnet IP address."
            },
            "dhcp_options": {
              "$ref": "#/definitions/dhcp_options"
            },
            "dhcp_server_address": {
              "$ref": "#/definitions/address"
            }
          },
          "description": "IP config."
        },
        "network_function_chain_reference": {
          "title": "Reference to a network_function_chain",
          "required": [
            "kind",
            "uuid"
          ],
          "type": "object",
          "properties": {
            "kind": {
              "default": "network_function_chain",
              "readOnly": false,
              "type": "string",
              "description": "The kind name",
              "x-ntnx-enum": [
                "network_function_chain"
              ]
            },
            "name": {
              "readOnly": false,
              "type": "string"
            },
            "uuid": {
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "type": "string",
              "format": "UUID"
            }
          },
          "description": "The reference to a network_function_chain"
        },
        "ip_pool": {
          "title": "IP pool",
          "type": "object",
          "properties": {
            "range": {
              "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[ ](?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
              "type": "string",
              "description": "Range of IPs (example: 10.0.0.9 10.0.0.19).\n"
            }
          },
          "description": "IP pool."
        },
        "dhcp_options": {
          "title": "DHCP options",
          "type": "object",
          "properties": {
            "domain_name_server_list": {
              "items": {
                "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                "type": "string"
              },
              "type": "array"
            },
            "boot_file_name": {
              "type": "string"
            },
            "domain_search_list": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "domain_name": {
              "type": "string"
            },
            "tftp_server_name": {
              "type": "string"
            }
          },
          "description": "Spec for defining DHCP options."
        },
        "address": {
          "description": "Host address.",
          "title": "Host address.",
          "type": "object",
          "properties": {
            "ip": {
              "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
              "type": "string",
              "description": "IPV4 address."
            },
            "ipv6": {
              "pattern": "(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))",
              "type": "string",
              "description": "IPV6 address."
            },
            "port": {
              "type": "integer",
              "description": "Port Number",
              "format": "int32"
            },
            "fqdn": {
              "type": "string",
              "description": "Fully qualified domain name."
            }
          },
          "x-ntnx-one-of": [
            {
              "required": [
                "ip"
              ]
            },
            {
              "required": [
                "ipv6"
              ]
            },
            {
              "required": [
                "fqdn"
              ]
            }
          ]
        }
  },
  "security": [
      {
          "basicAuth": []
      }
  ],
  "swagger": "2.0"
}